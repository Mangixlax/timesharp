map $sent_http_content_type $expires {
    "text/html"                 1h; # set this to your needs
    "text/html; charset=utf-8"  1h; # set this to your needs
    "application/javascript"    7d;
    "text/javascript"           7d;
    "image/jpeg"                3d;
    default                     7d; # set this to your needs
}

upstream backend {
    server backend:9000;
}

server {
    listen 80;
    listen 443 ssl http2;
    listen [::]:80;
    listen [::]:443 ssl http2;
    server_name timesharp.ru www.timesharp.ru;

    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";

    root /var/www/html/backend;

    charset utf-8;

    ssl_certificate /etc/nginx/ssl/live/timesharp.ru/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/timesharp.ru/privkey.pem;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    if ($scheme != "https") {
        return 301 https://$server_name$request_uri;
    }

    location / {
        # Let October CMS handle everything by default.
        # The path not resolved by October CMS router will return October CMS's 404 page.
        # Everything that does not match with the allowlist below will fall into this.
        rewrite ^/.*$ /index.php last;
    }

    # Pass the PHP scripts to FastCGI server
    location ~ ^/index.php {
        # Write your FPM configuration here
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        if (!-f $document_root$fastcgi_script_name) {
            return 404;
        }
        fastcgi_pass backend;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }

    # Allowlist
    location ~ ^/(favicon\.ico|sitemap\.xml|robots\.txt|humans\.txt)$ {
        try_files $uri /index.php;
    }

    # Block all .dotfiles except well-known
    location ~ /\.(?!well-known).* {
        deny all;
    }

    ## Let nginx return 404 if static file not exists
    location ~ ^/storage/(app/uploads/public|app/media|app/resources|temp/public) {
        try_files $uri 404;
    }

    location ~ ^/modules/.*/(assets|resources|behaviors/.*/(assets|resources)|widgets/.*/(assets|resources)|formwidgets/.*/(assets|resources)|reportwidgets/.*/(assets|resources)) {
        try_files $uri 404;
    }

    location ~ ^/plugins/.*/.*/(assets|resources|behaviors/.*/(assets|resources)|reportwidgets/.*/(assets|resources)|formwidgets/.*/(assets|resources)|widgets/.*/(assets|resources)) {
        try_files $uri 404;
    }

    location ~ ^/themes/.*/(assets|resources) {
        try_files $uri 404;
    }
}